# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: agent_api.proto

require 'google/protobuf'

Google::Protobuf::DescriptorPool.generated_pool.build do
  add_message "kolide.agent.AgentApiRequest" do
    optional :node_key, :string, 1
    optional :agent_version, :string, 2
  end
  add_message "kolide.agent.AgentApiResponse" do
    optional :message, :string, 1
    optional :error_code, :string, 2
    optional :node_invalid, :bool, 3
  end
  add_message "kolide.agent.EnrollmentRequest" do
    optional :enroll_secret, :string, 1
    optional :host_identifier, :string, 2
  end
  add_message "kolide.agent.EnrollmentResponse" do
    optional :node_key, :string, 1
    optional :node_invalid, :bool, 2
  end
  add_message "kolide.agent.ConfigResponse" do
    optional :config_json_blob, :string, 1
    optional :node_invalid, :bool, 2
  end
  add_message "kolide.agent.LogCollection" do
    optional :node_key, :string, 1
    optional :log_type, :enum, 2, "kolide.agent.LogCollection.LogType"
    repeated :logs, :message, 3, "kolide.agent.LogCollection.Log"
  end
  add_message "kolide.agent.LogCollection.Log" do
    optional :data, :string, 1
  end
  add_enum "kolide.agent.LogCollection.LogType" do
    value :RESULT, 0
    value :STATUS, 1
    value :AGENT, 2
  end
  add_message "kolide.agent.QueryCollection" do
    repeated :queries, :message, 1, "kolide.agent.QueryCollection.Query"
    optional :node_invalid, :bool, 2
  end
  add_message "kolide.agent.QueryCollection.Query" do
    optional :id, :string, 1
    optional :query, :string, 2
  end
  add_message "kolide.agent.ResultCollection" do
    optional :node_key, :string, 1
    repeated :results, :message, 2, "kolide.agent.ResultCollection.Result"
  end
  add_message "kolide.agent.ResultCollection.Result" do
    optional :id, :string, 1
    repeated :rows, :message, 2, "kolide.agent.ResultCollection.Result.ResultRow"
    optional :status, :int32, 3
  end
  add_message "kolide.agent.ResultCollection.Result.ResultRow" do
    repeated :columns, :message, 1, "kolide.agent.ResultCollection.Result.ResultRow.Column"
  end
  add_message "kolide.agent.ResultCollection.Result.ResultRow.Column" do
    optional :name, :string, 1
    optional :value, :string, 2
  end
end

module Kolide
  module Agent
    AgentApiRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("kolide.agent.AgentApiRequest").msgclass
    AgentApiResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("kolide.agent.AgentApiResponse").msgclass
    EnrollmentRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("kolide.agent.EnrollmentRequest").msgclass
    EnrollmentResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("kolide.agent.EnrollmentResponse").msgclass
    ConfigResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("kolide.agent.ConfigResponse").msgclass
    LogCollection = Google::Protobuf::DescriptorPool.generated_pool.lookup("kolide.agent.LogCollection").msgclass
    LogCollection::Log = Google::Protobuf::DescriptorPool.generated_pool.lookup("kolide.agent.LogCollection.Log").msgclass
    LogCollection::LogType = Google::Protobuf::DescriptorPool.generated_pool.lookup("kolide.agent.LogCollection.LogType").enummodule
    QueryCollection = Google::Protobuf::DescriptorPool.generated_pool.lookup("kolide.agent.QueryCollection").msgclass
    QueryCollection::Query = Google::Protobuf::DescriptorPool.generated_pool.lookup("kolide.agent.QueryCollection.Query").msgclass
    ResultCollection = Google::Protobuf::DescriptorPool.generated_pool.lookup("kolide.agent.ResultCollection").msgclass
    ResultCollection::Result = Google::Protobuf::DescriptorPool.generated_pool.lookup("kolide.agent.ResultCollection.Result").msgclass
    ResultCollection::Result::ResultRow = Google::Protobuf::DescriptorPool.generated_pool.lookup("kolide.agent.ResultCollection.Result.ResultRow").msgclass
    ResultCollection::Result::ResultRow::Column = Google::Protobuf::DescriptorPool.generated_pool.lookup("kolide.agent.ResultCollection.Result.ResultRow.Column").msgclass
  end
end
