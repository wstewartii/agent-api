# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: agent_api.proto for package 'kolide.agent'

require 'grpc'
require 'agent_api_pb'

module Kolide
  module Agent
    module Api
      class Service

        include GRPC::GenericService

        self.marshal_class_method = :encode
        self.unmarshal_class_method = :decode
        self.service_name = 'kolide.agent.Api'

        # ////////////////////
        # Core Service
        # ////////////////////
        #
        # Attempt to enroll a host with kolide/cloud
        rpc :RequestEnrollment, EnrollmentRequest, EnrollmentResponse
        # request an updated configuration from kolide/cloud
        # a generic request object is sent
        rpc :RequestConfig, AgentApiRequest, ConfigResponse
        # request/pull Dist queries from kolide/cloud
        # a generic request object is sent
        rpc :RequestQueries, AgentApiRequest, QueryCollection
        # publish logs from osqueryd to kolide/cloud
        # a generic response object is returned
        rpc :PublishLogs, LogCollection, AgentApiResponse
        # publish results from Dist queries to kolide/cloud
        # a generic response object is returned
        rpc :PublishResults, ResultCollection, AgentApiResponse
        # ////////////////////
        # Live-Link and BIDI stuff
        # ////////////////////
        #
        # pushed configurations
        rpc :HotConfigure, AgentApiRequest, stream(ConfigResponse)
        # this would be live query push to agent, and response back to kolide/cloud
        rpc :HotlineBling, stream(ResultCollection), stream(QueryCollection)
      end

      Stub = Service.rpc_stub_class
    end
  end
end
